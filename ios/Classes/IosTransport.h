// Autogenerated from Pigeon (v9.2.5), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class DataSource;
@class Version;
@class Property;
@class IosAppInfo;
@class IosTransportHandle;
@class IosTransportResult;

/// Datasource interface to map to datasource class to iOS via pigeon.
@interface DataSource : NSObject
+ (instancetype)makeWithId:(nullable NSNumber *)id
    name:(nullable NSString *)name
    status:(nullable NSNumber *)status
    flags:(nullable NSNumber *)flags;
@property(nonatomic, strong, nullable) NSNumber * id;
@property(nonatomic, copy, nullable) NSString * name;
@property(nonatomic, strong, nullable) NSNumber * status;
@property(nonatomic, strong, nullable) NSNumber * flags;
@end

/// Version interface to map to version class to iOS via pigeon.
@interface Version : NSObject
+ (instancetype)makeWithMajor:(nullable NSNumber *)major
    middle:(nullable NSNumber *)middle
    minor:(nullable NSNumber *)minor
    build:(nullable NSNumber *)build
    year:(nullable NSNumber *)year
    month:(nullable NSNumber *)month
    day:(nullable NSNumber *)day
    hour:(nullable NSNumber *)hour
    minute:(nullable NSNumber *)minute;
@property(nonatomic, strong, nullable) NSNumber * major;
@property(nonatomic, strong, nullable) NSNumber * middle;
@property(nonatomic, strong, nullable) NSNumber * minor;
@property(nonatomic, strong, nullable) NSNumber * build;
@property(nonatomic, strong, nullable) NSNumber * year;
@property(nonatomic, strong, nullable) NSNumber * month;
@property(nonatomic, strong, nullable) NSNumber * day;
@property(nonatomic, strong, nullable) NSNumber * hour;
@property(nonatomic, strong, nullable) NSNumber * minute;
@end

/// Property interface to map to property class to iOS via pigeon.
@interface Property : NSObject
+ (instancetype)makeWithId:(nullable NSNumber *)id
    type:(nullable NSNumber *)type
    stringValue:(nullable NSString *)stringValue
    longValue:(nullable NSNumber *)longValue
    arrayValue:(nullable FlutterStandardTypedData *)arrayValue
    byteValue:(nullable NSNumber *)byteValue
    dataSourceValue:(nullable DataSource *)dataSourceValue
    versionValue:(nullable Version *)versionValue
    objectValue:(id )objectValue;
@property(nonatomic, strong, nullable) NSNumber * id;
@property(nonatomic, strong, nullable) NSNumber * type;
@property(nonatomic, copy, nullable) NSString * stringValue;
@property(nonatomic, strong, nullable) NSNumber * longValue;
@property(nonatomic, strong, nullable) FlutterStandardTypedData * arrayValue;
@property(nonatomic, strong, nullable) NSNumber * byteValue;
@property(nonatomic, strong, nullable) DataSource * dataSourceValue;
@property(nonatomic, strong, nullable) Version * versionValue;
@property(nonatomic, strong) id  objectValue;
@end

/// App info class specifically for iOS.
@interface IosAppInfo : NSObject
+ (instancetype)makeWithAppId:(nullable NSString *)appId
    developerId:(nullable NSString *)developerId
    appKey:(nullable NSString *)appKey;
@property(nonatomic, copy, nullable) NSString * appId;
@property(nonatomic, copy, nullable) NSString * developerId;
@property(nonatomic, copy, nullable) NSString * appKey;
@end

/// Handle class specifically for iOS.
@interface IosTransportHandle : NSObject
+ (instancetype)makeWithValue:(nullable NSNumber *)value;
@property(nonatomic, strong, nullable) NSNumber * value;
@end

/// Transport result class pecifically for iOS.
@interface IosTransportResult : NSObject
+ (instancetype)makeWithValue:(nullable NSNumber *)value;
@property(nonatomic, strong, nullable) NSNumber * value;
@end

/// The codec used by IosTransport.
NSObject<FlutterMessageCodec> *IosTransportGetCodec(void);

/// Extends HostApi class as metadata .
/// This file is meant to define a communication interface used to connect our existing classes to iOS.
@protocol IosTransport
- (void)openClientAppInfo:(IosAppInfo *)appInfo completion:(void (^)(IosTransportHandle *_Nullable, FlutterError *_Nullable))completion;
- (void)openDeviceHandle:(IosTransportHandle *)handle guid:(NSString *)guid completion:(void (^)(IosTransportHandle *_Nullable, FlutterError *_Nullable))completion;
- (void)closeHandle:(IosTransportHandle *)handle completion:(void (^)(IosTransportResult *_Nullable, FlutterError *_Nullable))completion;
- (void)getPropertyHandle:(IosTransportHandle *)handle property:(Property *)property completion:(void (^)(Property *_Nullable, FlutterError *_Nullable))completion;
- (void)setPropertyHandle:(IosTransportHandle *)handle property:(Property *)property completion:(void (^)(Property *_Nullable, FlutterError *_Nullable))completion;
@end

extern void IosTransportSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<IosTransport> *_Nullable api);

NS_ASSUME_NONNULL_END
